# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: CI-CD

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: CI
    jobs:
      - job: Build
        displayName: "Docker Build and Push"
        steps:
          - template: ./templates/ci-docker-build-push.yml
            parameters:
            #set parameters pipeline variables
              imageRepository: $(imageRepository)    #'exemploapprepo'
              dockerfilePath: $(dockerfilePath)      #src/exemplo.app.Web/Dockerfile'
              buildContext: $(buildContext)          #'src'

  - stage: CD
    jobs:
      - job: Deploy
        displayName: "Deploy WebApp for Containes"
        steps:
          - template: ./templates/cd-web-app-containes.yml
            parameters:
            #set parameters pipeline variables
              WebAppName: $(WebAppName)                       #'app-exemplo-prd'
              containerRegistry: $(containerRegistry)         #'containersbiz'
              imageRepository: $(imageRepository)             #'exemploapprepo'
              imageTag: $(imageTag)   

#old
# stages:
#   - stage: CI
#     displayName: 'CI - Pipeline de CI'
#     jobs:
#     - job: BuildAndTest
#       displayName: 'Executando build do projeto'
#       steps:
#       - task: DotNetCoreCLI@2
#         displayName: Build
#         inputs:
#           command: 'build'
#           projects: $(projectPath)

#       - task: DotNetCoreCLI@2
#         displayName: Test
#         inputs:
#           command: 'test'
#           projects: $(testPath)
    
#     #criar nova vers√£o do app
#     - job: Release
#       displayName: 'Release'
#       dependsOn: BuildAndTest
#       steps:
#       - task: Docker@2
#         inputs:
#           containerRegistry: 'DockerHub'
#           repository: 'igorferrati/az-devops'
#           command: 'buildAndPush'
#           Dockerfile: $(dockerfilePath)
#           buildContext: './src'
#           tags: |
#             $(Build.BuildId)
#             latest
  
  # - stage: CD
  #   displayName: 'CD - Pipeline de CD'
  #   jobs:
  #   - job: Deploy
  #     displayName: 'Deploy k8s'
  #     steps:
  #     - task: KubernetesManifest@1
  #       inputs:
  #         action: 'deploy'
  #         connectionType: 'kubernetesServiceConnection'
  #         kubernetesServiceConnection: 'Kubernetes (lab02)'
  #         namespace: 'az-devops'
  #         manifests: './k8s/deployment.yaml'
  #         containers: 'igorferrati/az-devops:$(Build.BuildId)'
